{"ast":null,"code":"var _jsxFileName = \"/Users/timothysmith/code/web/cypress-example-recipes/examples/blogs__testing-redux-store/src/components/MainSection.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Footer from './Footer';\nimport VisibleTodoList from '../containers/VisibleTodoList';\n\nvar MainSection = function MainSection(_ref) {\n  var todosCount = _ref.todosCount,\n      completedCount = _ref.completedCount,\n      actions = _ref.actions;\n  return React.createElement(\"section\", {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, !!todosCount && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"toggle-all\",\n    type: \"checkbox\",\n    checked: completedCount === todosCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    onClick: actions.completeAllTodos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), React.createElement(VisibleTodoList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), !!todosCount && React.createElement(Footer, {\n    completedCount: completedCount,\n    activeCount: todosCount - completedCount,\n    onClearCompleted: actions.clearCompleted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nMainSection.propTypes = {\n  todosCount: PropTypes.number.isRequired,\n  completedCount: PropTypes.number.isRequired,\n  actions: PropTypes.object.isRequired\n};\nexport default MainSection;","map":{"version":3,"sources":["/Users/timothysmith/code/web/cypress-example-recipes/examples/blogs__testing-redux-store/src/components/MainSection.js"],"names":["React","PropTypes","Footer","VisibleTodoList","MainSection","todosCount","completedCount","actions","completeAllTodos","clearCompleted","propTypes","number","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,MAAeC,cAAf,QAAeA,cAAf;AAAA,MAA+BC,OAA/B,QAA+BA,OAA/B;AAAA,SAEhB;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,CAAC,CAACF,UAAF,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,OAAO,EAAEC,cAAc,KAAKD,UAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAO,IAAA,OAAO,EAAEE,OAAO,CAACC,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAHJ,EAYE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAcI,CAAC,CAACH,UAAF,IACA,oBAAC,MAAD;AACE,IAAA,cAAc,EAAEC,cADlB;AAEE,IAAA,WAAW,EAAED,UAAU,GAAGC,cAF5B;AAGE,IAAA,gBAAgB,EAAEC,OAAO,CAACE,cAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,CAFgB;AAAA,CAApB;;AA0BAL,WAAW,CAACM,SAAZ,GAAwB;AACtBL,EAAAA,UAAU,EAAEJ,SAAS,CAACU,MAAV,CAAiBC,UADP;AAEtBN,EAAAA,cAAc,EAAEL,SAAS,CAACU,MAAV,CAAiBC,UAFX;AAGtBL,EAAAA,OAAO,EAAEN,SAAS,CAACY,MAAV,CAAiBD;AAHJ,CAAxB;AAMA,eAAeR,WAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Footer from './Footer'\nimport VisibleTodoList from '../containers/VisibleTodoList'\n\nconst MainSection = ({ todosCount, completedCount, actions }) =>\n  (\n    <section className=\"main\">\n      {\n        !!todosCount && \n        <span>\n          <input\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={completedCount === todosCount}\n          />\n          <label onClick={actions.completeAllTodos}/>\n        </span>\n      }\n      <VisibleTodoList />\n      {\n        !!todosCount &&\n        <Footer\n          completedCount={completedCount}\n          activeCount={todosCount - completedCount}\n          onClearCompleted={actions.clearCompleted}\n        />\n      }\n    </section>\n  )\n\nMainSection.propTypes = {\n  todosCount: PropTypes.number.isRequired,\n  completedCount: PropTypes.number.isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nexport default MainSection;"]},"metadata":{},"sourceType":"module"}