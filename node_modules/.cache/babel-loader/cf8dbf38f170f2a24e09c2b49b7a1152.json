{"ast":null,"code":"import _classCallCheck from \"/Users/timothysmith/code/web/cypress-example-recipes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timothysmith/code/web/cypress-example-recipes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timothysmith/code/web/cypress-example-recipes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timothysmith/code/web/cypress-example-recipes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timothysmith/code/web/cypress-example-recipes/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timothysmith/code/web/cypress-example-recipes/examples/blogs__testing-redux-store/src/components/TodoItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport TodoTextInput from './TodoTextInput';\n\nvar TodoItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoItem, _Component);\n\n  function TodoItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editing: false\n    };\n\n    _this.handleDoubleClick = function () {\n      _this.setState({\n        editing: true\n      });\n    };\n\n    _this.handleSave = function (id, text) {\n      if (text.length === 0) {\n        _this.props.deleteTodo(id);\n      } else {\n        _this.props.editTodo(id, text);\n      }\n\n      _this.setState({\n        editing: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          todo = _this$props.todo,\n          completeTodo = _this$props.completeTodo,\n          deleteTodo = _this$props.deleteTodo;\n      var element;\n\n      if (this.state.editing) {\n        element = React.createElement(TodoTextInput, {\n          text: todo.text,\n          editing: this.state.editing,\n          onSave: function onSave(text) {\n            return _this2.handleSave(todo.id, text);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      } else {\n        element = React.createElement(\"div\", {\n          className: \"view\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: function onChange() {\n            return completeTodo(todo.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          onDoubleClick: this.handleDoubleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, todo.text), React.createElement(\"button\", {\n          className: \"destroy\",\n          onClick: function onClick() {\n            return deleteTodo(todo.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"li\", {\n        className: classnames({\n          completed: todo.completed,\n          editing: this.state.editing\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, element);\n    }\n  }]);\n\n  return TodoItem;\n}(Component);\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  editTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  completeTodo: PropTypes.func.isRequired\n};\nexport { TodoItem as default };","map":{"version":3,"sources":["/Users/timothysmith/code/web/cypress-example-recipes/examples/blogs__testing-redux-store/src/components/TodoItem.js"],"names":["React","Component","PropTypes","classnames","TodoTextInput","TodoItem","state","editing","handleDoubleClick","setState","handleSave","id","text","length","props","deleteTodo","editTodo","todo","completeTodo","element","completed","propTypes","object","isRequired","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;IAEqBC,Q;;;;;;;;;;;;;;;;;UAQnBC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;;UAIRC,iB,GAAoB,YAAM;AACxB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,K;;UAEDG,U,GAAa,UAACC,EAAD,EAAKC,IAAL,EAAc;AACzB,UAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,cAAKC,KAAL,CAAWC,UAAX,CAAsBJ,EAAtB;AACD,OAFD,MAEO;AACL,cAAKG,KAAL,CAAWE,QAAX,CAAoBL,EAApB,EAAwBC,IAAxB;AACD;;AACD,YAAKH,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACoC,KAAKO,KADzC;AAAA,UACCG,IADD,eACCA,IADD;AAAA,UACOC,YADP,eACOA,YADP;AAAA,UACqBH,UADrB,eACqBA,UADrB;AAGP,UAAII,OAAJ;;AACA,UAAI,KAAKb,KAAL,CAAWC,OAAf,EAAwB;AACtBY,QAAAA,OAAO,GACL,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAEF,IAAI,CAACL,IAA1B;AACe,UAAA,OAAO,EAAE,KAAKN,KAAL,CAAWC,OADnC;AAEe,UAAA,MAAM,EAAE,gBAACK,IAAD;AAAA,mBAAU,MAAI,CAACF,UAAL,CAAgBO,IAAI,CAACN,EAArB,EAAyBC,IAAzB,CAAV;AAAA,WAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,OAND,MAMO;AACLO,QAAAA,OAAO,GACL;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,SAAS,EAAC,QAAjB;AACO,UAAA,IAAI,EAAC,UADZ;AAEO,UAAA,OAAO,EAAEF,IAAI,CAACG,SAFrB;AAGO,UAAA,QAAQ,EAAE;AAAA,mBAAMF,YAAY,CAACD,IAAI,CAACN,EAAN,CAAlB;AAAA,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAKE;AAAO,UAAA,aAAa,EAAE,KAAKH,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGS,IAAI,CAACL,IADR,CALF,EAQE;AAAQ,UAAA,SAAS,EAAC,SAAlB;AACQ,UAAA,OAAO,EAAE;AAAA,mBAAMG,UAAU,CAACE,IAAI,CAACN,EAAN,CAAhB;AAAA,WADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF,CADF;AAaD;;AAED,aACE;AAAI,QAAA,SAAS,EAAER,UAAU,CAAC;AACxBiB,UAAAA,SAAS,EAAEH,IAAI,CAACG,SADQ;AAExBb,UAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC;AAFI,SAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGY,OAJH,CADF;AAQD;;;;EA3DmClB,S;;AAAjBI,Q,CACZgB,S,GAAY;AACjBJ,EAAAA,IAAI,EAAEf,SAAS,CAACoB,MAAV,CAAiBC,UADN;AAEjBP,EAAAA,QAAQ,EAAEd,SAAS,CAACsB,IAAV,CAAeD,UAFR;AAGjBR,EAAAA,UAAU,EAAEb,SAAS,CAACsB,IAAV,CAAeD,UAHV;AAIjBL,EAAAA,YAAY,EAAEhB,SAAS,CAACsB,IAAV,CAAeD;AAJZ,C;SADAlB,Q","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport TodoTextInput from './TodoTextInput'\n\nexport default class TodoItem extends Component {\n  static propTypes = {\n    todo: PropTypes.object.isRequired,\n    editTodo: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired,\n    completeTodo: PropTypes.func.isRequired\n  }\n\n  state = {\n    editing: false\n  }\n\n  handleDoubleClick = () => {\n    this.setState({ editing: true })\n  }\n\n  handleSave = (id, text) => {\n    if (text.length === 0) {\n      this.props.deleteTodo(id)\n    } else {\n      this.props.editTodo(id, text)\n    }\n    this.setState({ editing: false })\n  }\n\n  render() {\n    const { todo, completeTodo, deleteTodo } = this.props\n\n    let element\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput text={todo.text}\n                       editing={this.state.editing}\n                       onSave={(text) => this.handleSave(todo.id, text)} />\n      )\n    } else {\n      element = (\n        <div className=\"view\">\n          <input className=\"toggle\"\n                 type=\"checkbox\"\n                 checked={todo.completed}\n                 onChange={() => completeTodo(todo.id)} />\n          <label onDoubleClick={this.handleDoubleClick}>\n            {todo.text}\n          </label>\n          <button className=\"destroy\"\n                  onClick={() => deleteTodo(todo.id)} />\n        </div>\n      )\n    }\n\n    return (\n      <li className={classnames({\n        completed: todo.completed,\n        editing: this.state.editing\n      })}>\n        {element}\n      </li>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}