{"ast":null,"code":"import { createSelector } from \"reselect\";\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from \"../constants/TodoFilters\";\n\nvar getVisibilityFilter = function getVisibilityFilter(state) {\n  return state.visibilityFilter;\n};\n\nvar getTodos = function getTodos(state) {\n  return state.todos;\n};\n\nexport var getVisibleTodos = createSelector([getVisibilityFilter, getTodos], function (visibilityFilter, todos) {\n  switch (visibilityFilter) {\n    case SHOW_ALL:\n      return todos;\n\n    case SHOW_COMPLETED:\n      return todos.filter(function (t) {\n        return t.completed;\n      });\n\n    case SHOW_ACTIVE:\n      return todos.filter(function (t) {\n        return !t.completed;\n      });\n\n    default:\n      throw new Error(\"Unknown filter: \".concat(visibilityFilter));\n  }\n});\nexport var getCompletedTodoCount = createSelector([getTodos], function (todos) {\n  return todos.reduce(function (count, todo) {\n    return todo.completed ? count + 1 : count;\n  }, 0);\n});","map":{"version":3,"sources":["/Users/timothysmith/code/web/cypress-example-recipes/examples/blogs__testing-redux-store/src/selectors/index.js"],"names":["createSelector","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","getVisibilityFilter","state","visibilityFilter","getTodos","todos","getVisibleTodos","filter","t","completed","Error","getCompletedTodoCount","reduce","count","todo"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SACEC,QADF,EAEEC,cAFF,EAGEC,WAHF,QAIO,0BAJP;;AAMA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,gBAAjB;AAAA,CAA5B;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACF,KAAD;AAAA,SAAWA,KAAK,CAACG,KAAjB;AAAA,CAAjB;;AAEA,OAAO,IAAMC,eAAe,GAAGT,cAAc,CAC3C,CAACI,mBAAD,EAAsBG,QAAtB,CAD2C,EAE3C,UAACD,gBAAD,EAAmBE,KAAnB,EAA6B;AAC3B,UAAQF,gBAAR;AACE,SAAKL,QAAL;AACE,aAAOO,KAAP;;AACF,SAAKN,cAAL;AACE,aAAOM,KAAK,CAACE,MAAN,CAAa,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,SAAT;AAAA,OAAb,CAAP;;AACF,SAAKT,WAAL;AACE,aAAOK,KAAK,CAACE,MAAN,CAAa,UAACC,CAAD;AAAA,eAAO,CAACA,CAAC,CAACC,SAAV;AAAA,OAAb,CAAP;;AACF;AACE,YAAM,IAAIC,KAAJ,2BAA6BP,gBAA7B,EAAN;AARJ;AAUD,CAb0C,CAAtC;AAgBP,OAAO,IAAMQ,qBAAqB,GAAGd,cAAc,CAAC,CAACO,QAAD,CAAD,EAAa,UAACC,KAAD;AAAA,SAC9DA,KAAK,CAACO,MAAN,CAAa,UAACC,KAAD,EAAQC,IAAR;AAAA,WAAkBA,IAAI,CAACL,SAAL,GAAiBI,KAAK,GAAG,CAAzB,GAA6BA,KAA/C;AAAA,GAAb,EAAoE,CAApE,CAD8D;AAAA,CAAb,CAA5C","sourcesContent":["import { createSelector } from \"reselect\";\nimport {\n  SHOW_ALL,\n  SHOW_COMPLETED,\n  SHOW_ACTIVE,\n} from \"../constants/TodoFilters\";\n\nconst getVisibilityFilter = (state) => state.visibilityFilter;\nconst getTodos = (state) => state.todos;\n\nexport const getVisibleTodos = createSelector(\n  [getVisibilityFilter, getTodos],\n  (visibilityFilter, todos) => {\n    switch (visibilityFilter) {\n      case SHOW_ALL:\n        return todos;\n      case SHOW_COMPLETED:\n        return todos.filter((t) => t.completed);\n      case SHOW_ACTIVE:\n        return todos.filter((t) => !t.completed);\n      default:\n        throw new Error(`Unknown filter: ${visibilityFilter}`);\n    }\n  }\n);\n\nexport const getCompletedTodoCount = createSelector([getTodos], (todos) =>\n  todos.reduce((count, todo) => (todo.completed ? count + 1 : count), 0)\n);\n"]},"metadata":{},"sourceType":"module"}